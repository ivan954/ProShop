{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","axios.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","components/ProductFilter.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","baseURL","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","instance","create","i","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","config","headers","Authorization","token","get","data","message","response","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","className","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","name","Item","onClick","isAdmin","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","keyword","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","ProductFilter","onFilter","onSort","navigate","useNavigate","useState","setKeyword","min","max","priceRange","setPriceRange","setRating","sortBy","setSortBy","isOpen","setIsOpen","Button","in","Form","onSubmit","e","preventDefault","trim","lg","md","Control","onChange","target","placeholder","window","innerWidth","Group","Label","HomeScreen","useParams","filteredProducts","setFilteredProducts","activeFilters","setActiveFilters","sortOption","setSortOption","result","Number","sort","a","b","Date","createdAt","filters","sortValue","length","sm","xl","ProductScreen","qty","setQty","comment","setComment","params","successProductReview","loadingProductReview","errorProductReview","ListGroup","countInStock","disabled","review","substring","productId","post","controlId","row","addToCart","setItem","stringify","CartScreen","useLocation","search","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","sdkReady","setSdkReady","orderId","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","Error","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","setIsAdmin","userId","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","OrderListScreen","App","basename","path","element","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a5d79566.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from \"./reducers/productReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from \"./reducers/orderReducers\";\r\n\r\n// Add this axios configuration\r\nimport axios from \"axios\";\r\n\r\n// Configure axios defaults\r\naxios.defaults.baseURL =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? \"https://unleashed-shade-parka.glitch.me\"\r\n    : \"http://localhost:5000\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_CREATE_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL:\r\n    process.env.NODE_ENV === \"production\"\r\n      ? \"https://unleashed-shade-parka.glitch.me\"\r\n      : \"http://localhost:5000\",\r\n});\r\n\r\nexport default instance;\r\n","import axios from \"../axios\";\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from \"../constants/userConstants\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.post(\"/api/users/login\", { email, password });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  localStorage.removeItem(\"cartItems\");\r\n  localStorage.removeItem(\"shippingAddress\");\r\n  localStorage.removeItem(\"paymentMethod\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n  document.location.href = \"/login\";\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS });\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\"; // Import Routes component\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container className=\"custom-container\">\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>\r\n              <span>ProShop</span>\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/orderlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; ProShop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const listProducts =\r\n  (keyword = \"\", pageNumber = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n      const { data } = await axios.get(\r\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n      );\r\n\r\n      dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/top`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Carousel, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport { listTopProducts } from \"../actions/productActions\";\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated);\r\n  const { loading, error, products } = productTopRated;\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts());\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <Carousel pause=\"hover\" className=\"mb-4\">\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <div className=\"carousel-content\">\r\n              <Image src={product.image} alt={product.name} fluid />\r\n              <Carousel.Caption className=\"carousel-caption\">\r\n                <h2>\r\n                  {product.name} (${product.price})\r\n                </h2>\r\n              </Carousel.Caption>\r\n            </div>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To ProShop',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'electronics, buy electronics, cheap electroincs',\r\n}\r\n\r\nexport default Meta\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Row, Col, Collapse } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ProductFilter = ({ onFilter, onSort }) => {\r\n  const navigate = useNavigate();\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [priceRange, setPriceRange] = useState({ min: \"\", max: \"\" });\r\n  const [rating, setRating] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      navigate(`/search/${keyword}`);\r\n    } else {\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  const handleFilter = (e) => {\r\n    e.preventDefault();\r\n    onFilter({ priceRange, rating });\r\n    if (window.innerWidth <= 768) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleSort = (value) => {\r\n    setSortBy(value);\r\n    onSort(value);\r\n  };\r\n\r\n  const handleClearFilters = () => {\r\n    setPriceRange({ min: \"\", max: \"\" });\r\n    setRating(\"\");\r\n    setSortBy(\"\");\r\n    onFilter({ priceRange: { min: \"\", max: \"\" }, rating: \"\" });\r\n    onSort(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <div className=\"d-md-none mb-3\">\r\n        <Button\r\n          onClick={() => setIsOpen(!isOpen)}\r\n          variant=\"outline-primary\"\r\n          className=\"w-100 d-flex justify-content-between align-items-center\"\r\n        >\r\n          <span>Filters & Sort</span>\r\n          <i className={`fas fa-chevron-${isOpen ? \"up\" : \"down\"}`}></i>\r\n        </Button>\r\n      </div>\r\n\r\n      <Collapse in={isOpen} className=\"d-md-block\">\r\n        <div>\r\n          <Form onSubmit={submitHandler} className=\"mb-4\">\r\n            <Row>\r\n              <Col lg={9} md={8}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"q\"\r\n                  onChange={(e) => setKeyword(e.target.value)}\r\n                  placeholder=\"Search Products...\"\r\n                  className=\"mr-sm-2\"\r\n                ></Form.Control>\r\n              </Col>\r\n              <Col lg={3} md={4}>\r\n                <Button type=\"submit\" variant=\"primary\" className=\"w-100\">\r\n                  Search\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n\r\n          <Form onSubmit={handleFilter}>\r\n            <Row>\r\n              <Col lg={3} md={6}>\r\n                <Form.Group className=\"mb-0\">\r\n                  <Form.Label>Price Range</Form.Label>\r\n                  <div className=\"price-range-container\">\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"Min\"\r\n                      value={priceRange.min}\r\n                      onChange={(e) =>\r\n                        setPriceRange({ ...priceRange, min: e.target.value })\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"Max\"\r\n                      value={priceRange.max}\r\n                      onChange={(e) =>\r\n                        setPriceRange({ ...priceRange, max: e.target.value })\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={3} md={6}>\r\n                <Form.Group className=\"mb-0\">\r\n                  <Form.Label>Rating</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={rating}\r\n                    onChange={(e) => setRating(e.target.value)}\r\n                  >\r\n                    <option value=\"\">All Ratings</option>\r\n                    <option value=\"4\">4★ & above</option>\r\n                    <option value=\"3\">3★ & above</option>\r\n                    <option value=\"2\">2★ & above</option>\r\n                    <option value=\"1\">1★ & above</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={3} md={6}>\r\n                <Form.Group className=\"mb-0\">\r\n                  <Form.Label>Sort By</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={sortBy}\r\n                    onChange={(e) => handleSort(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Default</option>\r\n                    <option value=\"price_asc\">Price: Low to High</option>\r\n                    <option value=\"price_desc\">Price: High to Low</option>\r\n                    <option value=\"rating\">Rating</option>\r\n                    <option value=\"newest\">Newest</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={3} md={6}>\r\n                <Form.Group className=\"mb-0\">\r\n                  <Form.Label>&nbsp;</Form.Label>\r\n                  <div className=\"d-flex gap-5\">\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                      Apply Filters\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outline-primary\"\r\n                      onClick={handleClearFilters}\r\n                    >\r\n                      Clear\r\n                    </Button>\r\n                  </div>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductFilter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\nimport Meta from \"../components/Meta\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport ProductFilter from \"../components/ProductFilter\";\r\n\r\nconst HomeScreen = () => {\r\n  const { keyword, pageNumber = 1 } = useParams();\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [activeFilters, setActiveFilters] = useState(null);\r\n  const [sortOption, setSortOption] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber));\r\n  }, [dispatch, keyword, pageNumber]);\r\n\r\n  useEffect(() => {\r\n    if (products) {\r\n      let result = [...products];\r\n\r\n      // Apply filters\r\n      if (activeFilters) {\r\n        const { priceRange, rating } = activeFilters;\r\n\r\n        if (priceRange.min) {\r\n          result = result.filter(\r\n            (product) => product.price >= Number(priceRange.min)\r\n          );\r\n        }\r\n        if (priceRange.max) {\r\n          result = result.filter(\r\n            (product) => product.price <= Number(priceRange.max)\r\n          );\r\n        }\r\n        if (rating) {\r\n          result = result.filter((product) => product.rating >= Number(rating));\r\n        }\r\n      }\r\n\r\n      // Apply sorting\r\n      if (sortOption) {\r\n        switch (sortOption) {\r\n          case \"price_asc\":\r\n            result.sort((a, b) => a.price - b.price);\r\n            break;\r\n          case \"price_desc\":\r\n            result.sort((a, b) => b.price - a.price);\r\n            break;\r\n          case \"rating\":\r\n            result.sort((a, b) => b.rating - a.rating);\r\n            break;\r\n          case \"newest\":\r\n            result.sort(\r\n              (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\r\n            );\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n\r\n      setFilteredProducts(result);\r\n    }\r\n  }, [products, activeFilters, sortOption]);\r\n\r\n  const handleFilter = (filters) => {\r\n    setActiveFilters(filters);\r\n  };\r\n\r\n  const handleSort = (sortValue) => {\r\n    setSortOption(sortValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to=\"/\" className=\"btn btn-light\">\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <ProductFilter onFilter={handleFilter} onSort={handleSort} />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : filteredProducts.length === 0 ? (\r\n        <Message variant=\"info\">No Products Found</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {filteredProducts.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : \"\"}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductScreen = () => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0);\r\n      setComment(\"\");\r\n    }\r\n    if (!product._id || product._id !== params.id) {\r\n      dispatch(listProductDetails(params.id));\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n  }, [dispatch, params, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    navigate(`/cart/${params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className=\"btn-block\"\r\n                      type=\"button\"\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant=\"success\">\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant=\"danger\">{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"3\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useNavigate, useParams, useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nconst CartScreen = () => {\r\n  const { id: productId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  // Get qty from URL query\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    navigate(\"/login?redirect=/shipping\");\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { login } from \"../actions/userActions\";\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { search } = useLocation();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = search ? search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(redirect);\r\n    }\r\n  }, [navigate, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nconst RegisterScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { search } = useLocation();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = search ? search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(redirect);\r\n    }\r\n  }, [navigate, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import axios from \"axios\";\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from \"../constants/orderConstants\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    });\r\n    localStorage.removeItem(\"cartItems\");\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    if (!id) {\r\n      throw new Error(\"Order ID is required\");\r\n    }\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_PAY_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        paymentResult,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: ORDER_PAY_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, navigate, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  const handleOrderDetails = (id) => {\r\n    navigate(`/order/${id}`);\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : orders && orders.length === 0 ? (\r\n          <Message>No orders found</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders &&\r\n                orders.map((order) => (\r\n                  <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                    <td>{order.totalPrice}</td>\r\n                    <td>\r\n                      {order.isPaid ? (\r\n                        order.paidAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{ color: \"red\" }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {order.isDelivered ? (\r\n                        order.deliveredAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{ color: \"red\" }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <Button\r\n                        className=\"btn-sm\"\r\n                        variant=\"light\"\r\n                        onClick={() => handleOrderDetails(order._id)}\r\n                      >\r\n                        Details\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ShippingScreen = () => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    navigate(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter address\"\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter city\"\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter country\"\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst PaymentScreen = () => {\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress.address) {\r\n    navigate(\"/shipping\");\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    navigate(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\nimport { USER_DETAILS_RESET } from \"../constants/userConstants\";\r\n\r\nconst PlaceOrderScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    navigate(\"/shipping\");\r\n  } else if (!cart.paymentMethod) {\r\n    navigate(\"/payment\");\r\n  }\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      navigate(`/order/${order._id}`);\r\n      dispatch({ type: USER_DETAILS_RESET });\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [navigate, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderActions\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = () => {\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { id: orderId } = useParams();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading && order) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n\r\n    if (!orderId) {\r\n      navigate(\"/profile\");\r\n      return;\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    orderId,\r\n    successPay,\r\n    successDeliver,\r\n    order,\r\n    userInfo,\r\n    navigate,\r\n  ]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst UserListScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [dispatch, navigate, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst UserEditScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const userId = params.id;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      navigate(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, navigate, userId, user, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isadmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductListScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const pageNumber = params.pageNumber || 1;\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      navigate(\"/login\");\r\n    }\r\n\r\n    if (successCreate) {\r\n      navigate(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts(\"\", pageNumber));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    navigate,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductEditScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const productId = params.id;\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      navigate(\"/admin/productlist\");\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, navigate, productId, product, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter image url\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <input type=\"file\" id=\"image-file\" onChange={uploadFileHandler} />\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"countInStock\">\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter countInStock\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst OrderListScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [dispatch, navigate, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\r\nimport OrderListScreen from \"./screens/OrderListScreen\";\r\nimport \"./bootstrap.min.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Router basename=\"/ProShop\">\r\n        <Header />\r\n        <main className=\"m-4\">\r\n          <div>\r\n            <Routes>\r\n              <Route path=\"/\" element={<HomeScreen />}></Route>\r\n              <Route path=\"/order/:id\" element={<OrderScreen />}></Route>\r\n              <Route path=\"/shipping\" element={<ShippingScreen />}></Route>\r\n              <Route path=\"/payment\" element={<PaymentScreen />}></Route>\r\n              <Route path=\"/placeorder\" element={<PlaceOrderScreen />}></Route>\r\n              <Route path=\"/login\" element={<LoginScreen />}></Route>\r\n              <Route path=\"/register\" element={<RegisterScreen />}></Route>\r\n              <Route path=\"/profile\" element={<ProfileScreen />}></Route>\r\n              <Route path=\"/product/:id\" element={<ProductScreen />}></Route>\r\n              <Route path=\"/cart/:id?\" element={<CartScreen />}></Route>\r\n              <Route\r\n                path=\"/admin/userlist\"\r\n                element={<UserListScreen />}\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/user/:id/edit\"\r\n                element={<UserEditScreen />}\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/productlist\"\r\n                element={<ProductListScreen />}\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/productlist/:pageNumber\"\r\n                element={<ProductListScreen />}\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/product/:id/edit\"\r\n                element={<ProductEditScreen />}\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/orderlist\"\r\n                element={<OrderListScreen />}\r\n              ></Route>\r\n              <Route path=\"/search/:keyword\" element={<HomeScreen />}></Route>\r\n              <Route path=\"/page/:pageNumber\" element={<HomeScreen />}></Route>\r\n              <Route\r\n                path=\"/search/:keyword/page/:pageNumber\"\r\n                element={<HomeScreen />}\r\n              ></Route>\r\n            </Routes>\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}