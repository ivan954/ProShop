{"version":3,"sources":["data/products.js","data/users.js","services/api.js","store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","axios.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","utils/helpers.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","actions/productActions.js","components/ProductFilter.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["products","_id","name","image","description","brand","category","price","countInStock","rating","numReviews","users","email","password","bcrypt","hashSync","isAdmin","i","axios","get","data","id","post","api","getProducts","Promise","resolve","page","pages","getProductById","product","find","p","login","user","u","token","reject","Error","reducer","combineReducers","productList","state","action","type","loading","payload","error","productDetails","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","instance","create","baseURL","logout","dispatch","removeItem","document","location","href","getUserDetails","getState","config","headers","Authorization","message","response","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","className","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","Footer","Row","Col","Rating","value","text","color","style","defaultProps","getImagePath","imagePath","Product","Card","Img","src","Body","Title","as","Text","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","keyword","Pagination","Array","keys","key","active","ProductCarousel","topProducts","slice","Carousel","pause","Image","alt","fluid","Caption","Meta","keywords","Helmet","content","listProducts","listProductDetails","ProductFilter","onFilter","onSort","navigate","useNavigate","useState","setKeyword","min","max","priceRange","setPriceRange","setRating","sortBy","setSortBy","isOpen","setIsOpen","Button","in","Form","onSubmit","e","preventDefault","trim","lg","md","Control","onChange","target","placeholder","window","innerWidth","Group","Label","HomeScreen","useParams","pageNumber","filteredProducts","setFilteredProducts","activeFilters","setActiveFilters","sortOption","setSortOption","useEffect","result","Number","sort","a","b","Date","createdAt","filters","sortValue","length","sm","xl","ProductScreen","qty","setQty","comment","setComment","params","successProductReview","loadingProductReview","errorProductReview","ListGroup","disabled","review","substring","productId","controlId","row","addToCart","setItem","stringify","CartScreen","useLocation","search","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","setEmail","setPassword","redirect","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","sdkReady","setSdkReady","orderId","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","setIsAdmin","userId","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","OrderListScreen","App","basename","path","element","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ff95ec3e.chunk.js","sourcesContent":["const products = [\r\n  {\r\n    _id: \"1\",\r\n    name: \"Airpods Wireless Bluetooth Headphones\",\r\n    image: \"/images/airpods.jpg\",\r\n    description:\r\n      \"Bluetooth technology lets you connect it with compatible devices wirelessly High-quality AAC audio offers immersive listening experience Built-in microphone allows you to take calls while working\",\r\n    brand: \"Apple\",\r\n    category: \"Electronics\",\r\n    price: 89.99,\r\n    countInStock: 3,\r\n    rating: 0,\r\n    numReviews: 0,\r\n  },\r\n  {\r\n    _id: \"2\",\r\n    name: \"iPhone 11 Pro 256GB Memory\",\r\n    image: \"/images/phone.jpg\",\r\n    description:\r\n      \"Introducing the iPhone 11 Pro. A transformative triple-camera system that adds tons of capability without complexity. An unprecedented leap in battery life\",\r\n    brand: \"Apple\",\r\n    category: \"Electronics\",\r\n    price: 599.99,\r\n    countInStock: 10,\r\n    rating: 0,\r\n    numReviews: 0,\r\n  },\r\n  {\r\n    name: \"Cannon EOS 80D DSLR Camera\",\r\n    image: \"/images/camera.jpg\",\r\n    description:\r\n      \"Characterized by versatile imaging specs, the Canon EOS 80D further clarifies itself using a pair of robust focusing systems and an intuitive design\",\r\n    brand: \"Cannon\",\r\n    category: \"Electronics\",\r\n    price: 929.99,\r\n    countInStock: 0,\r\n    rating: 0,\r\n    numReviews: 0,\r\n  },\r\n  {\r\n    name: \"Sony Playstation 4 Pro White Version\",\r\n    image: \"/images/playstation.jpg\",\r\n    description:\r\n      \"The ultimate home entertainment center starts with PlayStation. Whether you are into gaming, HD movies, television, music\",\r\n    brand: \"Sony\",\r\n    category: \"Electronics\",\r\n    price: 399.99,\r\n    countInStock: 10,\r\n    rating: 0,\r\n    numReviews: 0,\r\n  },\r\n  {\r\n    name: \"Logitech G-Series Gaming Mouse\",\r\n    image: \"/images/mouse.jpg\",\r\n    description:\r\n      \"Get a better handle on your games with this Logitech LIGHTSYNC gaming mouse. The six programmable buttons allow customization for a smooth playing experience\",\r\n    brand: \"Logitech\",\r\n    category: \"Electronics\",\r\n    price: 49.99,\r\n    countInStock: 7,\r\n    rating: 0,\r\n    numReviews: 0,\r\n  },\r\n  {\r\n    name: \"Amazon Echo Dot 3rd Generation\",\r\n    image: \"/images/alexa.jpg\",\r\n    description:\r\n      \"Meet Echo Dot - Our most popular smart speaker with a fabric design. It is our most compact smart speaker that fits perfectly into small space\",\r\n    brand: \"Amazon\",\r\n    category: \"Electronics\",\r\n    price: 29.99,\r\n    countInStock: 0,\r\n    rating: 0,\r\n    numReviews: 0,\r\n  },\r\n];\r\n\r\nexport default products;\r\n","import bcrypt from 'bcryptjs'\r\n\r\nconst users = [\r\n  {\r\n    name: 'Admin User',\r\n    email: 'admin@example.com',\r\n    password: bcrypt.hashSync('123456', 10),\r\n    isAdmin: true,\r\n  },\r\n  {\r\n    name: 'John Doe',\r\n    email: 'john@example.com',\r\n    password: bcrypt.hashSync('123456', 10),\r\n  },\r\n  {\r\n    name: 'Jane Doe',\r\n    email: 'jane@example.com',\r\n    password: bcrypt.hashSync('123456', 10),\r\n  },\r\n]\r\n\r\nexport default users\r\n","import axios from \"axios\";\r\nimport products from \"../data/products\";\r\nimport users from \"../data/users\";\r\n\r\nconst isProd = process.env.NODE_ENV === \"production\";\r\n\r\n// Real API for development\r\nconst realApi = {\r\n  getProducts: async () => {\r\n    const { data } = await axios.get(\"/api/products\");\r\n    return data;\r\n  },\r\n  getProductById: async (id) => {\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    return data;\r\n  },\r\n  login: async (email, password) => {\r\n    const { data } = await axios.post(\"/api/users/login\", { email, password });\r\n    return data;\r\n  },\r\n  // ... other real API methods\r\n};\r\n\r\n// Fake API for production (GitHub Pages)\r\nconst fakeApi = {\r\n  getProducts: () => {\r\n    return Promise.resolve({ products, page: 1, pages: 1 });\r\n  },\r\n  getProductById: (id) => {\r\n    const product = products.find((p) => p._id === id);\r\n    return Promise.resolve(product);\r\n  },\r\n  login: (email, password) => {\r\n    const user = users.find(\r\n      (u) => u.email === email && u.password === password\r\n    );\r\n    if (user) {\r\n      return Promise.resolve({\r\n        ...user,\r\n        token: \"fake-jwt-token\",\r\n      });\r\n    }\r\n    return Promise.reject(new Error(\"Invalid email or password\"));\r\n  },\r\n  // ... other fake API methods\r\n};\r\n\r\n// Export the appropriate API based on environment\r\nexport const api = isProd ? fakeApi : realApi;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from \"./reducers/productReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from \"./reducers/orderReducers\";\r\nimport { api } from \"./services/api\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(thunk.withExtraArgument(api)))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_CREATE_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL:\r\n    process.env.NODE_ENV === \"production\"\r\n      ? \"https://unleashed-shade-parka.glitch.me\"\r\n      : \"http://localhost:5000\",\r\n});\r\n\r\nexport default instance;\r\n","import axios from \"../axios\";\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from \"../constants/userConstants\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.post(\"/api/users/login\", { email, password });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  localStorage.removeItem(\"cartItems\");\r\n  localStorage.removeItem(\"shippingAddress\");\r\n  localStorage.removeItem(\"paymentMethod\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n  document.location.href = \"/login\";\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS });\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\"; // Import Routes component\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container className=\"custom-container\">\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>\r\n              <span>ProShop</span>\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/orderlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; ProShop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n}\r\n\r\nexport default Rating\r\n","export const getImagePath = (imagePath) => {\r\n  // In development, use the regular path\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    return imagePath;\r\n  }\r\n  // In production (GitHub Pages), add the /ProShop prefix\r\n  return `/ProShop${imagePath}`;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\nimport { getImagePath } from \"../utils/helpers\";\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={getImagePath(product.image)} variant=\"top\" />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as=\"div\">\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Carousel, Image } from \"react-bootstrap\";\r\nimport { getImagePath } from \"../utils/helpers\";\r\nimport products from \"../data/products\";\r\n\r\nconst ProductCarousel = () => {\r\n  // Get top rated products (you can modify this logic as needed)\r\n  const topProducts = products.filter((p) => p.rating >= 4).slice(0, 3);\r\n\r\n  return (\r\n    <Carousel pause=\"hover\" className=\"bg-dark\">\r\n      {topProducts.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={getImagePath(product.image)} alt={product.name} fluid />\r\n            <Carousel.Caption className=\"carousel-caption\">\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To ProShop',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'electronics, buy electronics, cheap electroincs',\r\n}\r\n\r\nexport default Meta\r\n","import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const listProducts = () => async (dispatch, getState, api) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const data = await api.getProducts();\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/top`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Row, Col, Collapse } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ProductFilter = ({ onFilter, onSort }) => {\r\n  const navigate = useNavigate();\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [priceRange, setPriceRange] = useState({ min: \"\", max: \"\" });\r\n  const [rating, setRating] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      navigate(`/search/${keyword}`);\r\n    } else {\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  const handleFilter = (e) => {\r\n    e.preventDefault();\r\n    onFilter({ priceRange, rating });\r\n    if (window.innerWidth <= 768) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleSort = (value) => {\r\n    setSortBy(value);\r\n    onSort(value);\r\n  };\r\n\r\n  const handleClearFilters = () => {\r\n    setPriceRange({ min: \"\", max: \"\" });\r\n    setRating(\"\");\r\n    setSortBy(\"\");\r\n    onFilter({ priceRange: { min: \"\", max: \"\" }, rating: \"\" });\r\n    onSort(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <div className=\"d-md-none mb-3\">\r\n        <Button\r\n          onClick={() => setIsOpen(!isOpen)}\r\n          variant=\"outline-primary\"\r\n          className=\"w-100 d-flex justify-content-between align-items-center\"\r\n        >\r\n          <span>Filters & Sort</span>\r\n          <i className={`fas fa-chevron-${isOpen ? \"up\" : \"down\"}`}></i>\r\n        </Button>\r\n      </div>\r\n\r\n      <Collapse in={isOpen} className=\"d-md-block\">\r\n        <div>\r\n          <Form onSubmit={submitHandler} className=\"mb-4\">\r\n            <Row>\r\n              <Col lg={9} md={8}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"q\"\r\n                  onChange={(e) => setKeyword(e.target.value)}\r\n                  placeholder=\"Search Products...\"\r\n                  className=\"mr-sm-2\"\r\n                ></Form.Control>\r\n              </Col>\r\n              <Col lg={3} md={4}>\r\n                <Button type=\"submit\" variant=\"primary\" className=\"w-100\">\r\n                  Search\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n\r\n          <Form onSubmit={handleFilter}>\r\n            <Row>\r\n              <Col lg={3} md={6}>\r\n                <Form.Group className=\"mb-0\">\r\n                  <Form.Label>Price Range</Form.Label>\r\n                  <div className=\"price-range-container\">\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"Min\"\r\n                      value={priceRange.min}\r\n                      onChange={(e) =>\r\n                        setPriceRange({ ...priceRange, min: e.target.value })\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"Max\"\r\n                      value={priceRange.max}\r\n                      onChange={(e) =>\r\n                        setPriceRange({ ...priceRange, max: e.target.value })\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={3} md={6}>\r\n                <Form.Group className=\"mb-0\">\r\n                  <Form.Label>Rating</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={rating}\r\n                    onChange={(e) => setRating(e.target.value)}\r\n                  >\r\n                    <option value=\"\">All Ratings</option>\r\n                    <option value=\"4\">4★ & above</option>\r\n                    <option value=\"3\">3★ & above</option>\r\n                    <option value=\"2\">2★ & above</option>\r\n                    <option value=\"1\">1★ & above</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={3} md={6}>\r\n                <Form.Group className=\"mb-0\">\r\n                  <Form.Label>Sort By</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={sortBy}\r\n                    onChange={(e) => handleSort(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Default</option>\r\n                    <option value=\"price_asc\">Price: Low to High</option>\r\n                    <option value=\"price_desc\">Price: High to Low</option>\r\n                    <option value=\"rating\">Rating</option>\r\n                    <option value=\"newest\">Newest</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={3} md={6}>\r\n                <Form.Group className=\"mb-0\">\r\n                  <Form.Label>&nbsp;</Form.Label>\r\n                  <div className=\"d-flex gap-5\">\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                      Apply Filters\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outline-primary\"\r\n                      onClick={handleClearFilters}\r\n                    >\r\n                      Clear\r\n                    </Button>\r\n                  </div>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductFilter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\nimport Meta from \"../components/Meta\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport ProductFilter from \"../components/ProductFilter\";\r\n\r\nconst HomeScreen = () => {\r\n  const { keyword, pageNumber = 1 } = useParams();\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [activeFilters, setActiveFilters] = useState(null);\r\n  const [sortOption, setSortOption] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber));\r\n  }, [dispatch, keyword, pageNumber]);\r\n\r\n  useEffect(() => {\r\n    if (products) {\r\n      let result = [...products];\r\n\r\n      // Apply filters\r\n      if (activeFilters) {\r\n        const { priceRange, rating } = activeFilters;\r\n\r\n        if (priceRange.min) {\r\n          result = result.filter(\r\n            (product) => product.price >= Number(priceRange.min)\r\n          );\r\n        }\r\n        if (priceRange.max) {\r\n          result = result.filter(\r\n            (product) => product.price <= Number(priceRange.max)\r\n          );\r\n        }\r\n        if (rating) {\r\n          result = result.filter((product) => product.rating >= Number(rating));\r\n        }\r\n      }\r\n\r\n      // Apply sorting\r\n      if (sortOption) {\r\n        switch (sortOption) {\r\n          case \"price_asc\":\r\n            result.sort((a, b) => a.price - b.price);\r\n            break;\r\n          case \"price_desc\":\r\n            result.sort((a, b) => b.price - a.price);\r\n            break;\r\n          case \"rating\":\r\n            result.sort((a, b) => b.rating - a.rating);\r\n            break;\r\n          case \"newest\":\r\n            result.sort(\r\n              (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\r\n            );\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n\r\n      setFilteredProducts(result);\r\n    }\r\n  }, [products, activeFilters, sortOption]);\r\n\r\n  const handleFilter = (filters) => {\r\n    setActiveFilters(filters);\r\n  };\r\n\r\n  const handleSort = (sortValue) => {\r\n    setSortOption(sortValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to=\"/\" className=\"btn btn-light\">\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <ProductFilter onFilter={handleFilter} onSort={handleSort} />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : filteredProducts.length === 0 ? (\r\n        <Message variant=\"info\">No Products Found</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {filteredProducts.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : \"\"}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductScreen = () => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0);\r\n      setComment(\"\");\r\n    }\r\n    if (!product._id || product._id !== params.id) {\r\n      dispatch(listProductDetails(params.id));\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n  }, [dispatch, params, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    navigate(`/cart/${params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className=\"btn-block\"\r\n                      type=\"button\"\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant=\"success\">\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant=\"danger\">{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"3\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useNavigate, useParams, useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nconst CartScreen = () => {\r\n  const { id: productId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  // Get qty from URL query\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    navigate(\"/login?redirect=/shipping\");\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { login } from \"../actions/userActions\";\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { search } = useLocation();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = search ? search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(redirect);\r\n    }\r\n  }, [navigate, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nconst RegisterScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { search } = useLocation();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = search ? search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(redirect);\r\n    }\r\n  }, [navigate, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import axios from \"axios\";\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from \"../constants/orderConstants\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    });\r\n    localStorage.removeItem(\"cartItems\");\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    if (!id) {\r\n      throw new Error(\"Order ID is required\");\r\n    }\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_PAY_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        paymentResult,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: ORDER_PAY_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, navigate, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  const handleOrderDetails = (id) => {\r\n    navigate(`/order/${id}`);\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : orders && orders.length === 0 ? (\r\n          <Message>No orders found</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders &&\r\n                orders.map((order) => (\r\n                  <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                    <td>{order.totalPrice}</td>\r\n                    <td>\r\n                      {order.isPaid ? (\r\n                        order.paidAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{ color: \"red\" }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {order.isDelivered ? (\r\n                        order.deliveredAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{ color: \"red\" }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <Button\r\n                        className=\"btn-sm\"\r\n                        variant=\"light\"\r\n                        onClick={() => handleOrderDetails(order._id)}\r\n                      >\r\n                        Details\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ShippingScreen = () => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    navigate(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter address\"\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter city\"\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter country\"\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst PaymentScreen = () => {\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress.address) {\r\n    navigate(\"/shipping\");\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    navigate(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\nimport { USER_DETAILS_RESET } from \"../constants/userConstants\";\r\n\r\nconst PlaceOrderScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    navigate(\"/shipping\");\r\n  } else if (!cart.paymentMethod) {\r\n    navigate(\"/payment\");\r\n  }\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      navigate(`/order/${order._id}`);\r\n      dispatch({ type: USER_DETAILS_RESET });\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [navigate, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderActions\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = () => {\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { id: orderId } = useParams();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading && order) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n\r\n    if (!orderId) {\r\n      navigate(\"/profile\");\r\n      return;\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    orderId,\r\n    successPay,\r\n    successDeliver,\r\n    order,\r\n    userInfo,\r\n    navigate,\r\n  ]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst UserListScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [dispatch, navigate, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst UserEditScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const userId = params.id;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      navigate(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, navigate, userId, user, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isadmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductListScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const pageNumber = params.pageNumber || 1;\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      navigate(\"/login\");\r\n    }\r\n\r\n    if (successCreate) {\r\n      navigate(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts(\"\", pageNumber));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    navigate,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductEditScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const productId = params.id;\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      navigate(\"/admin/productlist\");\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, navigate, productId, product, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter image url\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <input type=\"file\" id=\"image-file\" onChange={uploadFileHandler} />\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"countInStock\">\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter countInStock\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst OrderListScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [dispatch, navigate, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\r\nimport OrderListScreen from \"./screens/OrderListScreen\";\r\nimport \"./bootstrap.min.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Router basename=\"/ProShop\">\r\n        <Header />\r\n        <main className=\"m-4\">\r\n          <div>\r\n            <Routes>\r\n              <Route path=\"/\" element={<HomeScreen />}></Route>\r\n              <Route path=\"/order/:id\" element={<OrderScreen />}></Route>\r\n              <Route path=\"/shipping\" element={<ShippingScreen />}></Route>\r\n              <Route path=\"/payment\" element={<PaymentScreen />}></Route>\r\n              <Route path=\"/placeorder\" element={<PlaceOrderScreen />}></Route>\r\n              <Route path=\"/login\" element={<LoginScreen />}></Route>\r\n              <Route path=\"/register\" element={<RegisterScreen />}></Route>\r\n              <Route path=\"/profile\" element={<ProfileScreen />}></Route>\r\n              <Route path=\"/product/:id\" element={<ProductScreen />}></Route>\r\n              <Route path=\"/cart/:id?\" element={<CartScreen />}></Route>\r\n              <Route\r\n                path=\"/admin/userlist\"\r\n                element={<UserListScreen />}\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/user/:id/edit\"\r\n                element={<UserEditScreen />}\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/productlist\"\r\n                element={<ProductListScreen />}\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/productlist/:pageNumber\"\r\n                element={<ProductListScreen />}\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/product/:id/edit\"\r\n                element={<ProductEditScreen />}\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/orderlist\"\r\n                element={<OrderListScreen />}\r\n              ></Route>\r\n              <Route path=\"/search/:keyword\" element={<HomeScreen />}></Route>\r\n              <Route path=\"/page/:pageNumber\" element={<HomeScreen />}></Route>\r\n              <Route\r\n                path=\"/search/:keyword/page/:pageNumber\"\r\n                element={<HomeScreen />}\r\n              ></Route>\r\n            </Routes>\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}